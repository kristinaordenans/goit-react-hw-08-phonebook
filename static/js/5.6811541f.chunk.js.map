{"version":3,"file":"static/js/5.6811541f.chunk.js","mappings":"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","sources":["components/ContacForm/ContactForm.styled.jsx","redux/contacts/selector.js","components/ContacForm/ContactForm.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/FilterContacts/FilterContacts.styled.jsx","components/FilterContacts/FilterContacts.jsx","pages/ContactPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  displey: flex;\n  flex-direction:column;\n  width: 300px;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const Button = styled.button`\n    width: 150px;\n    padding:7px;\n    border:none;\n    border-radius: 7px;\n    background-color: rgb(245, 127, 49);\n    color: #ffffff;\n    font-size:20px;\n    font-weight:bold;\n`;\n\nexport const Label = styled.label`\n    display:flex;\n    flex-direction:column;\n    gap:7px;\n\n`;\n\nexport const Input = styled.input`\n    padding:3px;\n    padding-left:7px;\n    margin-bottom: 15px;\n    height: 22px;\n`;\n\nexport const Span = styled.span`\n    font-size:20px;\n    font-weight:bold;\n`;","export const selectItems = state => state.contacts.contacts.items;\nexport const selectIsLoading = state => state.contacts.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = (filter, contacts) => {\n  if (!filter) return contacts;\n  const normalizedFilter = filter.toLowerCase();\n  if (contacts.length !== 0)\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n};","import { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Form, Button, Label, Input, Span } from \"./ContactForm.styled\";\nimport { useRef } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectItems } from \"redux/contacts/selector\";\nimport { addContact } from \"redux/contacts/operations\";\n\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setPhone] = useState('');\n  const dispatch = useDispatch();\n  const formReff = useRef(null);\n  const  contacts  = useSelector(selectItems);\n\n  const handleChange = e => {\n    switch (e.target.name) {\n      case 'name':\n        setName(e.target.value);\n        break;\n      \n      case 'number':\n        setPhone(e.target.value);\n        break;\n      \n      default:\n        return;\n    }\n  };\n\n  const handlrAddToContactList = (e) => {\n        const includesName = contacts.find(contact => contact.name === name);\n        const includesNumber = contacts.find(contact => contact.number === number);\n        e.preventDefault();\n\n        if(includesName) {\n            alert(`'${name}'is alredy in contacts`)\n        } else if(includesNumber) {\n            alert(`'${number}'is alredy in contacts`)\n        } else {\n            dispatch(addContact({ name, number }));\n          setName('');\n          setPhone('');\n        }\n  }\n\n  return (\n    <Form onSubmit={handlrAddToContactList} ref={formReff}>\n            <Label>\n              <Span>Name</Span>\n              <Input type=\"text\"\n                 value={name}\n                 onChange={handleChange}\n                 name=\"name\"\n                 pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                 title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                 required/>\n              </Label>\n            <Label>\n              <Span>Phone</Span>\n              <Input type=\"tel\"\n                 value={number}\n                 onChange={handleChange}\n                 name=\"number\"\n                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                 required />\n              </Label>\n            <Button type=\"submit\">Add contact</Button>\n          </Form>\n  )\n}\n","import styled from \"@emotion/styled\";\n\nexport const Item = styled.li`\ndisplay:flex;\nalign-items:center;\njustify-content:space-between;\n`;\n\nexport const P = styled.p`\nmargin:0;\n\n`;\n\nexport const DeliteBtn = styled.button`\nheight:30px;\n   padding-left:10px;\n   padding-right:10px;\n   background-color:rgb(245, 127, 49);\n   color:#ffffff;\n   border:none;\n   border-radius:5px;\n`;","import { Item, P, DeliteBtn } from './ContactItem.styled';\nimport { deleteContact } from \"redux/contacts/operations\";\nimport { useDispatch } from \"react-redux\";\n\n\nexport const ContactItem = ({ name, id, tel }) => {\n    const dispatch = useDispatch();\n const contactNameAndId = { id, name };\n  const hanldeDelete = () => {\n    dispatch(deleteContact(contactNameAndId));\n  };\n    return (<Item>\n        <P>{name}: <span>{tel}</span></P>\n        <DeliteBtn type = \"button\" onClick={hanldeDelete}>delete</DeliteBtn>\n   </Item>)\n}\n\n","import styled from \"@emotion/styled\";\n\nexport const ContactListContainer = styled.ul`\n  displey: flex;\n  width: 300px;\n  list-style: none;\n  padding:0;\n`;","import React from \"react\";\nimport { ContactItem } from \"components/ContactItem/ContactItem\";\nimport { ContactListContainer } from \"./ContactList.styled\";\nimport { useSelector } from \"react-redux\";\nimport { getFilteredContacts } from 'redux/contacts/selector';\nimport { selectItems, selectFilter } from \"redux/contacts/selector\";\n\n\nexport const ContactList = () => {\n    const contacts = useSelector(selectItems);\n    const filter = useSelector(selectFilter);\n    const filteredContacts = getFilteredContacts(filter, contacts);\n\n    return (\n    <div>\n        <ContactListContainer>\n           {filteredContacts && filteredContacts.map(({ name, number, id })=>{\n               return (\n                   <ContactItem key={id}\n                        id={id}\n                        name={name}\n                        tel={number} />\n                )\n             })\n           }     \n       </ContactListContainer>\n    </div>\n    )\n}\n","import styled from \"@emotion/styled\";\n\nexport const FindContactInput = styled.input`\n    height: 25px;\n    width:293px;\n`;\n\nexport const SearchTitle = styled.h3`\n    font-size:20px;\n    margin:0;\n    margin-top:10px;\n    margin-bottom:7px;\n    margin-top:25px;\n`;","import { FindContactInput, SearchTitle } from \"./FilterContacts.styled\";\nimport { selectFilter } from \"redux/contacts/selector\";\nimport { filterContacts } from \"redux/contacts/contactSlice\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\n\n\n\n\nexport const Filter = () => {\n   const filteValue = useSelector(selectFilter);\n   const dispatch = useDispatch();\n   const changeFilter = e => dispatch(filterContacts(e.currentTarget.value));\n\n    return (\n        <div>\n            <SearchTitle>Find contacts by name</SearchTitle>\n            <FindContactInput type=\"text\" value={filteValue} onChange={changeFilter}  />\n        </div>\n    )\n}\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContact } from 'redux/contacts/operations';\nimport { ContactForm } from '../components/ContacForm/ContactForm';\nimport { ContactList } from '../components/ContactList/ContactList'\n// import { ContactsTitle } from '../components/App.styled';\nimport { Filter } from '../components/FilterContacts/FilterContacts';\nimport { selectItems } from 'redux/contacts/selector';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems);\n\n  useEffect(() => {\n    dispatch(fetchContact());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h2>Add contact</h2>\n      <ContactForm />\n      {contacts?.length > 1 && <Filter />}\n      <ContactList />\n    </>\n  );\n}"],"names":["Form","styled","Button","Label","Input","Span","selectItems","state","contacts","items","selectFilter","filter","ContactForm","useState","name","setName","number","setPhone","dispatch","useDispatch","formReff","useRef","useSelector","handleChange","e","target","value","onSubmit","includesName","find","contact","includesNumber","preventDefault","alert","addContact","ref","type","onChange","pattern","title","required","Item","P","DeliteBtn","ContactItem","id","tel","contactNameAndId","onClick","deleteContact","ContactListContainer","ContactList","filteredContacts","normalizedFilter","toLowerCase","length","includes","getFilteredContacts","map","FindContactInput","SearchTitle","Filter","filteValue","filterContacts","currentTarget","Contacts","useEffect","fetchContact"],"sourceRoot":""}